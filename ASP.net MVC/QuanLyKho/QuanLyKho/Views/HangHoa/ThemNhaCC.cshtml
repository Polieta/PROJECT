@model QuanLyKho.Models.tblnhacc
@{
    ViewBag.Title = "Thêm nhà cung cấp";
    Layout = "~/Views/Shared/_LayoutPage1.cshtml";
}
<style>
    /* CSS để label và textbox nằm ngang và gần nhau */
    .form-horizontal .form-group {
        margin-bottom: 15px;
        display: flex;
        align-items: center;
    }

    .form-horizontal .control-label {
        width: 30%;
        margin-right: 10px;
        text-align: right;
    }

    .form-horizontal .col-md-10 {
        width: 70%;
    }

    .form-horizontal input[type="text"] {
        width: 100%;
        box-sizing: border-box;
    }

    /* Tùy chỉnh giao diện của nút */
    .btn-custom {
        border: 1px solid #ccc;
        padding: 8px 15px;
        background-color: #007bff;
        color: white;
        border-radius: 5px;
        text-align: center;
        display: inline-block;
        margin: 10px;
    }

    /* Định dạng div để căn giữa trên màn hình */
    .center-content {
        text-align: center;
        margin: 0 auto;
        width: 50%; /* Điều chỉnh chiều rộng của div nếu cần thiết */
    }

    .custom-error-text {
        background-color: rgba(255, 255, 255, 0); /* Màu nền trong suốt */
        color: red; /* Màu chữ đỏ */
    }
</style>
<div class="container">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <h2 style="text-align:center">Thêm nhà cung cấp</h2>
            @using (Html.BeginForm("ThemNhaCC", "HangHoa", FormMethod.Post, new { id = "addForm", onsubmit = "return validateForm();" }))
            {
                @Html.AntiForgeryToken()
                    <hr />
                    @Html.ValidationSummary(true)
                    <div class="form-group">
                        @Html.LabelFor(model => model.ma, "Mã nhà cung cấp:", new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.ma, new { id = "ma", @class = "form-control" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.ten, "Tên nhà cung cấp:", new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.ten, new { id = "ten", @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.ten)
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.Label("Chọn loại:", new { @class = "control-label col-md-2" })
                        <div class="col-md-5">
                            @Html.DropDownList("LoaiLuaChon", ViewBag.DanhSachLuaChon as List<SelectListItem>, new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.diachi, "Địa chỉ:", new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.diachi, new { id = "diachi", @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.diachi)
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.sdt, "SĐT:", new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.sdt, new { id = "sdt", @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.sdt)
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.fax, "FAX:", new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.fax, new { id = "fax", @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.fax)
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.email, "Email:", new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.email, new { id = "email", @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.email)
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.mota, "Mô tả:", new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.mota, new { id = "mota", @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.mota)
                        </div>
                    </div>
                <div class="form-group text-center">
                <div>
                    <input type="submit" value="Thêm mới" class="btn btn-primary" style="border: 1px solid #ccc; padding: 8px 15px;" />
                </div>
            </div>
            }
            <div style="text-align:center">
                @Html.ActionLink("Trở lại", "NhaCC", "HangHoa")
            </div>
            </div>
        </div>
        </div>
        <div id="custom-popup" style="display: none; position: fixed; top: 50%; left: 50%; transform: translate(-50%, -50%); background-color: #fff; padding: 20px; border: 1px solid #ccc; z-index: 9999; text-align: center;">
            <p id="custom-popup-text" class="custom-error-text" style="font-size: 18px; margin-bottom: 20px;"></p>
            <button onclick="closeCustomPopup()" style="background-color: #007bff; color: white; border: none; padding: 10px 20px; cursor: pointer; font-size: 16px; border-radius: 4px; transition: background-color 0.3s;">OK</button>
        </div>
        <script>
            document.addEventListener('DOMContentLoaded', function () {
                var errorMessage = '@TempData["ErrorMessage"]';
                if (errorMessage !== '') {
                    document.getElementById("custom-popup-text").innerHTML = errorMessage;
                    document.getElementById("custom-popup").style.display = "block";
                }
            });
            function closeCustomPopup() {
                document.getElementById("custom-popup").style.display = "none";
            }
            function validateForm() {
                var fields = ["ma", "ten", "diachi", "sdt", "fax", "email", "mota"];
                var isEmpty = false;
                fields.forEach(function (field) {
                    var element = document.getElementById(field);
                    var value = element.value.trim();
                    element.value = value;
                    if (value === '') {
                        isEmpty = true;
                    }
                });
                if (isEmpty) {
                    document.getElementById("custom-popup-text").innerHTML = "Vui lòng điền đầy đủ thông tin";
                    document.getElementById("custom-popup").style.display = "block";
                    return false;
                }
                return true;
            }
        </script>
